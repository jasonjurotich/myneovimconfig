# https://blog.getreu.net/20220828-tp-note-new8/
# https://medium.com/@CaffeineForCode/helix-setup-for-markdown-b29d9891a812
# https://github.com/helix-editor/helix/discussions/3637#discussioncomment-6868540
# https://github.com/helix-editor/helix/issues/7149
# https://roderik.no/helix-editor-with-multiple-lsps-for-one-language
# https://github.com/H4ckint0sh/dotfiles/blob/main/helix/.config/helix/languages.toml


# for nu, after you add the grammar part, you must run 
# hx -g fetch
# hx -g build

# then you must create a path which is .config/helix/runtime/queries/nu
# then you touch highlights.scm in that directory
# then copy and paste everything from here: https://github.com/nushell/tree-sitter-nu/blob/main/queries/nu/highlights.scm
# then restart terminal


[language-server.harper-ls]
command = "harper-ls"
args = ["--stdio"]

[language-server.harper-ls.config.harper-ls]
diagnosticSeverity = "hint"
isolateEnglish = false

[language-server.harper-ls.config.harper-ls.linters]
SpellCheck = true
SpelledNumbers = false
AnA = true
SentenceCapitalization = true
UnclosedQuotes = true
WrongQuotes = false
LongSentences = true
RepeatedWords = true
Spaces = true
Matcher = true
CorrectNumberSuffix = true
UseGenitive = true
BoringWords = true
NoOxfordComma = true
PluralConjugate = true
LinkingVerbs = true


[language-server.harper-ls.config.harper-ls.codeActions]
ForceStable = false

[language-server.harper-ls.config.harper-ls.markdown]
IgnoreLinkTitle = false


[[language]]
name = "markdown"
formatter = { command = 'prettier', args = [
  "--parser",
  "markdown",
  "--prose-wrap",
  "never", # <always|never|preserve>
] }
auto-format = true
# add ltex-ls-plus in the list to review spanish

language-servers = ["marksman", "harper-ls", "markdown-oxide"]
file-types = ["md", "txt"]
scope = "source.md"
indent = { tab-width = 2, unit = "  " }
injection-regex = "md|markdown"

[language-server.ltex-ls-plus.config]
ltex.diagnosticSeverity = "warning"
ltex.disabledRules = {"en-MX" = ["PROFANITY"] }
ltex.dictionary = {"en-MX" = ["builtin"] }

[[language]]
name = "sql"
language-servers = ["sql"]
file-types = ["sql"]
scope = "source.sql"
indent = { tab-width = 2, unit = "  " }
auto-format = true

[language-server.sql]
command = "/opt/homebrew/bin/sql-language-server"

[[language]]
name = "rust"
# roots = ["Cargo.toml", "Cargo.lock"]
# auto-format = true
# indent = { tab-width = 2, unit = "  " }
language-servers = [
    "rust-analyzer",  
    "llm-lsp",
    "harper-ls"
]

# scope = "source.rust"
# injection-regex = "rust"
# file-types = ["rs"]
# comment-token = "//"

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
checkOnSave = {command = "clippy"}
# checkOnSave = {command = "clippy", extraArgs = ["--", "-W", "clippy::pedantic"]}

[language-server.llm-lsp]
command = "llm-lsp"
args = ["server", "-p", "codeium"]

[language.debugger]
name = "lldb-vscode"
transport = "stdio"
command = "lldb-vscode"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [ { name = "binary", completion = "filename" } ]
# args = { program = "{0}", runInTerminal = true }
args = { program = "{0}"}


[[language]]
 name = "javascript"
 language-servers = [ "typescript-language-server", "tailwindcss-react", "eslint", "emmet-ls", "scls", "graphql"]
 formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }
 indent = { tab-width = 2, unit = "\t" }
 auto-format = true

[[language]]
 name = "typescript"
 language-servers = [  "typescript-language-server", "tailwindcss-react", "eslint", "emmet-ls", "scls", "graphql"]
 formatter = { command = 'npx', args = ["prettier", "--parser", "typescript"] }
 indent = { tab-width = 2, unit = "\t" }
 auto-format = true

[[language]]
 name = "json"
 language-servers = [ "vscode-json-language-server" ]
 formatter = { command = 'npx', args = ["prettier", "--parser", "json"] }
 indent = { tab-width = 2, unit = "\t" }
 auto-format = true

[[language]]
 name = "html"
 formatter = { command = 'npx', args = ["prettier", "--parser", "html"] }
 language-servers = [ "vscode-html-language-server", "tailwindcss-react", "emmet-ls"]
 
[[language]]
 name = "css"
 formatter = { command = 'npx', args = ["prettier", "--parser", "css"] }
 language-servers = [ "vscode-css-language-server", "tailwindcss-react", "emmet-ls"]

[[grammar]]
name = "nu"
source = { git = "https://github.com/nushell/tree-sitter-nu", rev = "main" }



